#plotdata[substr(plotdata$Habit, 1,1) %in% 'T',c('Field', 'Shrub')] <- plotdata[substr(plotdata$Habit, 1,1) %in% 'T',c('Field', 'Shrub')]/1000
#plotdata$Total <- 100*(1-10^(apply(log10(1-(plotdata[,c('Field', 'Shrub', 'Subcanopy', 'Tree')]/100.001)), MARGIN = 1, FUN='sum')))
#plotdata$sqrttotal <- plotdata$Total^0.5
prematrix <- plotdata#subset(plotdata, Observation_ID %in% plots)
Com.Sp.agg <- aggregate(log10(1-(prematrix[,c('Field', 'Shrub', 'Subcanopy', 'Tree')]/100.001)), by=list(soilplot = prematrix$soilplot),  FUN='sum')
Com.Sp.agg[,c('Field', 'Shrub', 'Subcanopy', 'Tree')] <- 100*(1-10^(Com.Sp.agg[,c('Field', 'Shrub', 'Subcanopy', 'Tree')]))
Com.Sp.agg$over <- 100*(1-10^(apply(log10(1-(Com.Sp.agg[,c('Subcanopy', 'Tree')]/100.001)), MARGIN = 1, FUN='sum')))
Com.Sp.agg$under <- 100*(1-10^(apply(log10(1-(Com.Sp.agg[,c('Field', 'Shrub')]/100.001)), MARGIN = 1, FUN='sum')))
Com.Sp.agg$invover <- 100- Com.Sp.agg$over
rownames(Com.Sp.agg) <- Com.Sp.agg$soilplot
Com.Sp.agg <- Com.Sp.agg[,-1]
plotdata$logtotal <- (log10(100*(1-10^(apply(log10(1-(plotdata[,c('Field', 'Shrub', 'Subcanopy', 'Tree')]/100.001)), MARGIN = 1, FUN='sum'))))+2)
plotmatrix <- makecommunitydataset(plotdata, row = 'soilplot', column = 'Species', value = 'logtotal', drop = TRUE)
d <- vegdist(plotmatrix, method='bray', binary=FALSE, na.rm=T)
t <- flexbeta(d, beta =  -0.25)
groups <- cutree(t, k = k)
soilplot <- names(groups)
clust <- unname(groups)
groupdf <- as.data.frame(cbind(soilplot, clust))
plotgroup <- merge(groupdf, plotdata, by='soilplot')
plotgroupsum <- aggregate(plotgroup$Total, by=list(clust = plotgroup$clust, Species = plotgroup$Species), FUN='sum')
names(plotgroupsum)[names(plotgroupsum)=='x'] <-'sum'
plotgroupmax <- aggregate(plotgroupsum$sum, by=list(clust = plotgroupsum$clust), FUN='max')
names(plotgroupmax)[names(plotgroupmax)=='x'] <-'max'
plotgroupsum <- merge(plotgroupsum, plotgroupmax, by='clust')
plotgroupsum$Imp <- plotgroupsum$sum/plotgroupsum$max
rm(plotgroupmax, plotgroup)
cluster <- '8'
states <- c('MI','IN','OH')
core <- c('MI')
ecoregion <- c('222')
level <- 'Association'
level <- unique(unit[unit$hierarchylevel %in% level,'element_global_id'])
unit$woodland <- 0
unit[substring(unit$unitsort,1,1) %in% '1',]$woodland <- 1
states <- unique(vegstates[vegstates$subnation_code %in% states,'element_global_id'])
core <- unique(vegstates[vegstates$subnation_code %in% core,'element_global_id'])
ecoregion <- unique(vegecoregion[vegecoregion$usfs_ecoregion_2007_concat_cd %in% ecoregion,'element_global_id'])
g <- subset(plotgroupsum, clust==cluster)
plotassociations <- as.data.frame(lapply(as.data.frame(cbind(soilplot='x', clust = 'x', 'element_global_id'=0, 'scientificname'='x')), as.character), stringsAsFactors=FALSE)
for(i in 1:nrow(groupdf)){
g <- subset(plotdata, soilplot==groupdf[i,1])
overstory <- Com.Sp.agg[groupdf[i,1],'over']
overwt <- overstory/(overstory+12.5)*(1+12.5/100)#skews weight to woodlands at 10% cover. Change 12.5 to 50 for a 25% threshold.
g$Imp <- g$Total
g$Imp <- g$Imp^0.5
gtotal <- sum(g$Imp)
vegtotal <- aggregate(USNVClist$x, by=list(element_global_id = USNVClist$element_global_id, scientificname = USNVClist$scientificname), FUN='sum')
names(vegtotal)[names(vegtotal)=='x'] <-'vegtotal'
gmerge <- merge(g, USNVClist, by.x = 'Species', by.y = 'acctaxon')
gmerge$intersect <- (gmerge$Imp*gmerge$x)^0.5
gintersect <- aggregate(gmerge$intersect, by=list(element_global_id = gmerge$element_global_id, scientificname = gmerge$scientificname), FUN='sum')
names(gintersect)[names(gintersect)=='x'] <-'intersect'
g <- merge(gintersect, vegtotal, by=c('element_global_id', 'scientificname'))
g$affinity <- g$intersect/(g$vegtotal*gtotal)^0.5*100
g <- merge(g, unit[,c('element_global_id', 'woodland')], by='element_global_id')
g$wt <- overwt*g$woodland + (1-g$woodland)*(1-overwt)
g$state <- 'no'
if(nrow(g[g$element_global_id %in% states,])>0){
g[g$element_global_id %in% states,]$state <- 'near'}
if(nrow(g[g$element_global_id %in% core,])>0){
g[g$element_global_id %in% core,]$state <- 'yes'}
g$ecoregion <- 'no'
if(nrow(g[g$element_global_id %in% ecoregion,])>0){
g[g$element_global_id %in% ecoregion,]$ecoregion <- 'yes'}
g$level <- 'no'
g[g$element_global_id %in% level,]$level <- 'yes'
g <- subset(g, level == 'yes')
g$best <- g$affinity * g$wt #bias towards matching structure
g[g$ecoregion == 'no',]$best <- g[g$ecoregion == 'no',]$best*0.75
g[g$element_global_id %in% states,]$best <- g[g$element_global_id %in% states,]$best*1/0.75
g[g$element_global_id %in% core,]$best <- g[g$element_global_id %in% core,]$best*1/0.75
g$best <- g$best/max(g$best)*100
g <- g[,!colnames(g)%in% c('intersect','vegtotal')]
rm(gmerge, vegtotal, gintersect)
g <- subset(g, best >= 0 & level == 'yes')# & state == 'yes')
g <- g[order(g$best, decreasing = TRUE),]
plotassociations1 <- as.data.frame(lapply(as.data.frame(cbind(groupdf[i,],g[1,1:2])), as.character), stringsAsFactors=FALSE)
plotassociations <- rbind(plotassociations,plotassociations1)
}
rm(plotassociations1)
plotassociations <- plotassociations[-1,]
plotassociations <- merge(unique(plotdata[,c('soilplot', 'Observation_ID')]), plotassociations, by='soilplot')
write.csv(plotassociations, 'output/allplotassociations.csv', row.names = F)
library(stringr)
library(BiodiversityR)
library(cluster)
library(ape)
library(dendextend)
library(dplyr)
library(dynamicTreeCut)
library(rpart)
library(rpart.plot)
library(goeveg)
library(proxy)
library(optpart)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
betasim <- function(p){
d <- matrix(1, nrow = nrow(p), ncol = nrow(p))
rownames(d) <- rownames(p)
colnames(d) <- rownames(p)
for(j in 1:nrow(p)){
for(k in 1:nrow(p)){
d[j,k] <- 1-sum((p[j,]*p[k,])^0.5)/sqrt(sum(p[j,])*sum(p[k,]))
}}
d<-as.dist(d)
}
makeplot <- function(amethod,d,t,k){
filename <- paste0('output/vegplots_',amethod,'.png')
#make cuts and reformat dendrogram
ngroups=k
groups <- cutree(t, k = ngroups)
soilplot <- names(groups)
clust <- unname(groups)
groupdf <- as.data.frame(cbind(soilplot, clust))
groupdf$clust <- (as.numeric(as.character(groupdf$clust)))
maxcluster <- max(groupdf$clust)
numberzeros <- nrow(groupdf[(groupdf$clust == 0),])
whichrecords <- which(groupdf$clust == 0)
if (nrow(groupdf[groupdf$clust == 0,]) != 0){
for (i in 1:numberzeros){ #assign all zero clusters to unique cluster number.
groupdf[whichrecords[i],]$clust <- maxcluster+i}}
newlabels <- t$order.lab
newlabels <- as.data.frame(newlabels)
newlabels$row <- row(newlabels)
newlabels <- merge(newlabels, groupdf, by.x='newlabels', by.y ='soilplot')
newlabels$newlabels <- paste(newlabels$clust, newlabels$newlabels)
newlabels <- newlabels[order(newlabels$row),1]
newtree <- t
newtree$order.lab <- newlabels
dend1 <- color_branches(as.hclust(newtree), k = ngroups)
dend1 <- color_labels(dend1, k = ngroups)
#output file
w <- 800
h <- nrow(d)*12+80
u <- 12
png(filename=filename,width = w, height = h, units = "px", pointsize = u)
par(mar = c(2,0,1,13))
plot(dend1, horiz = TRUE, main=paste('floristic simularity', amethod,' method of plots'), font=1, cex=0.84)
dev.off()
}
ecoregion <-  read.delim('data/d_usfs_ecoregion2007.txt', encoding = 'latin1', na.strings = '', stringsAsFactors=FALSE)
vegecoregion <-  read.delim('data/UnitXEcoregionUsfs2007.txt', encoding = 'latin1', na.strings = '', stringsAsFactors=FALSE)
vegecoregion <- merge(vegecoregion, ecoregion, by='usfs_ecoregion_2007_id')
unit <-  read.delim('data/unit.txt', encoding = 'latin1', na.strings = '', stringsAsFactors=FALSE)
states <-read.delim('data/d_subnation.txt')
vegstates <-read.delim('data/UnitXSubnation.txt')
vegstates <- merge(vegstates, states, by='subnation_id')
USNVClist <- readRDS('data/USNVClist.RDS')
USNVClist <- subset(USNVClist, !grepl('\\.', acctaxon))
#plotdata <- readRDS('data/plotdata.RDS')
plotdata <- readRDS('data/Com.Sp.mean.RDS')
plotdata$soilplot <- str_replace_all(plotdata$soilplot, '\\)', '.')
plotdata$soilplot <- str_replace_all(plotdata$soilplot, '\\(', '.')
plots <- c(
'GRR.GJS.2016.21',
'GRR.GJS.2016.59',
'GRR.GJS.2016.30',
'GRR.GJS.2016.32',
'GRR.2011.GJS.12',
'GRR.GJS.2015.27',
'GRR.GJS.2015.26',
'GRR.GJS.2015.28',
'GRR.GJS.2015.20',
'GRR.GJS.2015.22',
'GRR.GJS.2015.21',
'GRR.GJS.2015.25',
'GRR.GJS.2015.29',
'GRR.GJS.2015.30',
'GRR.GJS.2017.8',
'GRR.GJS.2017.9',
'GRR.GJS.2017.19',
'GRR.GJS.2017.23',
'GRR.GJS.2018.13',
'GRR.GJS.2018.14',
'GRR.GJS.2018.3',
'GRR.GJS.2018.4',
'GRR.GJS.2018.5',
'GRR.GJS.2018.17',
'GRR.GJS.2018.21',
'GRR.GJS.2018.22',
'GRR.GJS.2018.24',
'GRR.GJS.2018.28',
'GRR.GJS.2018.29',
'GRR.GJS.2015.24',
'GRR.GJS.2015.23',
'GRR.GJS.2012.23',
'GRR.GJS.2012.24',
'GRR.GJS.2012.25',
'GRR.GJS.2012.31',
'GRR.GJS.2012.70',
'GRR.GJS.2012.34',
'GRR.GJS.2012.35',
'GRR.GJS.2012.36',
'GRR.GJS.2012.40',
'GRR.GJS.2019.22',
'GRR.GJS.2019.11',
'GRR.GJS.2019.12',
'GRR.GJS.2019.13',
'GRR.GJS.2019.17',
'GRR.GJS.2014.39',
'GRR.GJS.2014.40',
'GRR.GJS.2020.13',
'GRR.GJS.2020.14',
'GRR.GJS.2020.15',
'GRR.GJS.2020.16',
'GRR.GJS.2021.1',
'GRR.GJS.2021.2',
'GRR.GJS.2021.3'
)
#plotdata[substr(plotdata$Habit, 1,1) %in% 'T',c('Field', 'Shrub')] <- plotdata[substr(plotdata$Habit, 1,1) %in% 'T',c('Field', 'Shrub')]/1000
#plotdata$Total <- 100*(1-10^(apply(log10(1-(plotdata[,c('Field', 'Shrub', 'Subcanopy', 'Tree')]/100.001)), MARGIN = 1, FUN='sum')))
#plotdata$sqrttotal <- plotdata$Total^0.5
prematrix <- plotdata#subset(plotdata, Observation_ID %in% plots)
Com.Sp.agg <- aggregate(log10(1-(prematrix[,c('Field', 'Shrub', 'Subcanopy', 'Tree')]/100.001)), by=list(soilplot = prematrix$soilplot),  FUN='sum')
Com.Sp.agg[,c('Field', 'Shrub', 'Subcanopy', 'Tree')] <- 100*(1-10^(Com.Sp.agg[,c('Field', 'Shrub', 'Subcanopy', 'Tree')]))
Com.Sp.agg$over <- 100*(1-10^(apply(log10(1-(Com.Sp.agg[,c('Subcanopy', 'Tree')]/100.001)), MARGIN = 1, FUN='sum')))
Com.Sp.agg$under <- 100*(1-10^(apply(log10(1-(Com.Sp.agg[,c('Field', 'Shrub')]/100.001)), MARGIN = 1, FUN='sum')))
Com.Sp.agg$invover <- 100- Com.Sp.agg$over
rownames(Com.Sp.agg) <- Com.Sp.agg$soilplot
Com.Sp.agg <- Com.Sp.agg[,-1]
plotdata$logtotal <- (log10(100*(1-10^(apply(log10(1-(plotdata[,c('Field', 'Shrub', 'Subcanopy', 'Tree')]/100.001)), MARGIN = 1, FUN='sum'))))+2)
plotmatrix <- makecommunitydataset(plotdata, row = 'soilplot', column = 'Species', value = 'logtotal', drop = TRUE)
d <- vegdist(plotmatrix, method='bray', binary=FALSE, na.rm=T)
t <- flexbeta(d, beta =  -0.25)
groups <- cutree(t, k = k)
soilplot <- names(groups)
clust <- unname(groups)
groupdf <- as.data.frame(cbind(soilplot, clust))
k=8
groups <- cutree(t, k = k)
soilplot <- names(groups)
clust <- unname(groups)
groupdf <- as.data.frame(cbind(soilplot, clust))
plotgroup <- merge(groupdf, plotdata, by='soilplot')
plotgroupsum <- aggregate(plotgroup$Total, by=list(clust = plotgroup$clust, Species = plotgroup$Species), FUN='sum')
names(plotgroupsum)[names(plotgroupsum)=='x'] <-'sum'
plotgroupmax <- aggregate(plotgroupsum$sum, by=list(clust = plotgroupsum$clust), FUN='max')
names(plotgroupmax)[names(plotgroupmax)=='x'] <-'max'
plotgroupsum <- merge(plotgroupsum, plotgroupmax, by='clust')
plotgroupsum$Imp <- plotgroupsum$sum/plotgroupsum$max
rm(plotgroupmax, plotgroup)
cluster <- '8'
states <- c('MI','IN','OH')
core <- c('MI')
ecoregion <- c('222')
level <- 'Association'
level <- unique(unit[unit$hierarchylevel %in% level,'element_global_id'])
unit$woodland <- 0
unit[substring(unit$unitsort,1,1) %in% '1',]$woodland <- 1
states <- unique(vegstates[vegstates$subnation_code %in% states,'element_global_id'])
core <- unique(vegstates[vegstates$subnation_code %in% core,'element_global_id'])
ecoregion <- unique(vegecoregion[vegecoregion$usfs_ecoregion_2007_concat_cd %in% ecoregion,'element_global_id'])
plotgroupsum
g <- subset(plotgroupsum, clust==cluster)
plotassociations <- as.data.frame(lapply(as.data.frame(cbind(soilplot='x', clust = 'x', 'element_global_id'=0, 'scientificname'='x')), as.character), stringsAsFactors=FALSE)
for(i in 1:nrow(groupdf)){
g <- subset(plotdata, soilplot==groupdf[i,1])
overstory <- Com.Sp.agg[groupdf[i,1],'over']
overwt <- overstory/(overstory+12.5)*(1+12.5/100)#skews weight to woodlands at 10% cover. Change 12.5 to 50 for a 25% threshold.
g$Imp <- g$Total
g$Imp <- g$Imp^0.5
gtotal <- sum(g$Imp)
vegtotal <- aggregate(USNVClist$x, by=list(element_global_id = USNVClist$element_global_id, scientificname = USNVClist$scientificname), FUN='sum')
names(vegtotal)[names(vegtotal)=='x'] <-'vegtotal'
gmerge <- merge(g, USNVClist, by.x = 'Species', by.y = 'acctaxon')
gmerge$intersect <- (gmerge$Imp*gmerge$x)^0.5
gintersect <- aggregate(gmerge$intersect, by=list(element_global_id = gmerge$element_global_id, scientificname = gmerge$scientificname), FUN='sum')
names(gintersect)[names(gintersect)=='x'] <-'intersect'
g <- merge(gintersect, vegtotal, by=c('element_global_id', 'scientificname'))
g$affinity <- g$intersect/(g$vegtotal*gtotal)^0.5*100
g <- merge(g, unit[,c('element_global_id', 'woodland')], by='element_global_id')
g$wt <- overwt*g$woodland + (1-g$woodland)*(1-overwt)
g$state <- 'no'
if(nrow(g[g$element_global_id %in% states,])>0){
g[g$element_global_id %in% states,]$state <- 'near'}
if(nrow(g[g$element_global_id %in% core,])>0){
g[g$element_global_id %in% core,]$state <- 'yes'}
g$ecoregion <- 'no'
if(nrow(g[g$element_global_id %in% ecoregion,])>0){
g[g$element_global_id %in% ecoregion,]$ecoregion <- 'yes'}
g$level <- 'no'
g[g$element_global_id %in% level,]$level <- 'yes'
g <- subset(g, level == 'yes')
g$best <- g$affinity * g$wt #bias towards matching structure
g[g$ecoregion == 'no',]$best <- g[g$ecoregion == 'no',]$best*0.75
g[g$element_global_id %in% states,]$best <- g[g$element_global_id %in% states,]$best*1/0.75
g[g$element_global_id %in% core,]$best <- g[g$element_global_id %in% core,]$best*1/0.75
g$best <- g$best/max(g$best)*100
g <- g[,!colnames(g)%in% c('intersect','vegtotal')]
rm(gmerge, vegtotal, gintersect)
g <- subset(g, best >= 0 & level == 'yes')# & state == 'yes')
g <- g[order(g$best, decreasing = TRUE),]
plotassociations1 <- as.data.frame(lapply(as.data.frame(cbind(groupdf[i,],g[1,1:2])), as.character), stringsAsFactors=FALSE)
plotassociations <- rbind(plotassociations,plotassociations1)
}
rm(plotassociations1)
plotassociations <- plotassociations[-1,]
plotassociations <- merge(unique(plotdata[,c('soilplot', 'Observation_ID')]), plotassociations, by='soilplot')
write.csv(plotassociations, 'output/allplotassociations.csv', row.names = F)
View(plotassociations)
library(stringr)
library(BiodiversityR)
library(cluster)
library(ape)
library(dendextend)
library(dplyr)
library(dynamicTreeCut)
library(rpart)
library(rpart.plot)
library(goeveg)
library(proxy)
library(optpart)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
betasim <- function(p){
d <- matrix(1, nrow = nrow(p), ncol = nrow(p))
rownames(d) <- rownames(p)
colnames(d) <- rownames(p)
for(j in 1:nrow(p)){
for(k in 1:nrow(p)){
d[j,k] <- 1-sum((p[j,]*p[k,])^0.5)/sqrt(sum(p[j,])*sum(p[k,]))
}}
d<-as.dist(d)
}
makeplot <- function(amethod,d,t,k){
filename <- paste0('output/vegplots_',amethod,'.png')
#make cuts and reformat dendrogram
ngroups=k
groups <- cutree(t, k = ngroups)
soilplot <- names(groups)
clust <- unname(groups)
groupdf <- as.data.frame(cbind(soilplot, clust))
groupdf$clust <- (as.numeric(as.character(groupdf$clust)))
maxcluster <- max(groupdf$clust)
numberzeros <- nrow(groupdf[(groupdf$clust == 0),])
whichrecords <- which(groupdf$clust == 0)
if (nrow(groupdf[groupdf$clust == 0,]) != 0){
for (i in 1:numberzeros){ #assign all zero clusters to unique cluster number.
groupdf[whichrecords[i],]$clust <- maxcluster+i}}
newlabels <- t$order.lab
newlabels <- as.data.frame(newlabels)
newlabels$row <- row(newlabels)
newlabels <- merge(newlabels, groupdf, by.x='newlabels', by.y ='soilplot')
newlabels$newlabels <- paste(newlabels$clust, newlabels$newlabels)
newlabels <- newlabels[order(newlabels$row),1]
newtree <- t
newtree$order.lab <- newlabels
dend1 <- color_branches(as.hclust(newtree), k = ngroups)
dend1 <- color_labels(dend1, k = ngroups)
#output file
w <- 800
h <- nrow(d)*12+80
u <- 12
png(filename=filename,width = w, height = h, units = "px", pointsize = u)
par(mar = c(2,0,1,13))
plot(dend1, horiz = TRUE, main=paste('floristic simularity', amethod,' method of plots'), font=1, cex=0.84)
dev.off()
}
ecoregion <-  read.delim('data/d_usfs_ecoregion2007.txt', encoding = 'latin1', na.strings = '', stringsAsFactors=FALSE)
vegecoregion <-  read.delim('data/UnitXEcoregionUsfs2007.txt', encoding = 'latin1', na.strings = '', stringsAsFactors=FALSE)
vegecoregion <- merge(vegecoregion, ecoregion, by='usfs_ecoregion_2007_id')
unit <-  read.delim('data/unit.txt', encoding = 'latin1', na.strings = '', stringsAsFactors=FALSE)
states <-read.delim('data/d_subnation.txt')
vegstates <-read.delim('data/UnitXSubnation.txt')
vegstates <- merge(vegstates, states, by='subnation_id')
USNVClist <- readRDS('data/USNVClist.RDS')
USNVClist <- subset(USNVClist, !grepl('\\.', acctaxon))
#plotdata <- readRDS('data/plotdata.RDS')
plotdata <- readRDS('data/Com.Sp.mean.RDS')
plotdata$soilplot <- str_replace_all(plotdata$soilplot, '\\)', '.')
plotdata$soilplot <- str_replace_all(plotdata$soilplot, '\\(', '.')
plots <- c(
'GRR.GJS.2016.21',
'GRR.GJS.2016.59',
'GRR.GJS.2016.30',
'GRR.GJS.2016.32',
'GRR.2011.GJS.12',
'GRR.GJS.2015.27',
'GRR.GJS.2015.26',
'GRR.GJS.2015.28',
'GRR.GJS.2015.20',
'GRR.GJS.2015.22',
'GRR.GJS.2015.21',
'GRR.GJS.2015.25',
'GRR.GJS.2015.29',
'GRR.GJS.2015.30',
'GRR.GJS.2017.8',
'GRR.GJS.2017.9',
'GRR.GJS.2017.19',
'GRR.GJS.2017.23',
'GRR.GJS.2018.13',
'GRR.GJS.2018.14',
'GRR.GJS.2018.3',
'GRR.GJS.2018.4',
'GRR.GJS.2018.5',
'GRR.GJS.2018.17',
'GRR.GJS.2018.21',
'GRR.GJS.2018.22',
'GRR.GJS.2018.24',
'GRR.GJS.2018.28',
'GRR.GJS.2018.29',
'GRR.GJS.2015.24',
'GRR.GJS.2015.23',
'GRR.GJS.2012.23',
'GRR.GJS.2012.24',
'GRR.GJS.2012.25',
'GRR.GJS.2012.31',
'GRR.GJS.2012.70',
'GRR.GJS.2012.34',
'GRR.GJS.2012.35',
'GRR.GJS.2012.36',
'GRR.GJS.2012.40',
'GRR.GJS.2019.22',
'GRR.GJS.2019.11',
'GRR.GJS.2019.12',
'GRR.GJS.2019.13',
'GRR.GJS.2019.17',
'GRR.GJS.2014.39',
'GRR.GJS.2014.40',
'GRR.GJS.2020.13',
'GRR.GJS.2020.14',
'GRR.GJS.2020.15',
'GRR.GJS.2020.16',
'GRR.GJS.2021.1',
'GRR.GJS.2021.2',
'GRR.GJS.2021.3'
)
#plotdata[substr(plotdata$Habit, 1,1) %in% 'T',c('Field', 'Shrub')] <- plotdata[substr(plotdata$Habit, 1,1) %in% 'T',c('Field', 'Shrub')]/1000
#plotdata$Total <- 100*(1-10^(apply(log10(1-(plotdata[,c('Field', 'Shrub', 'Subcanopy', 'Tree')]/100.001)), MARGIN = 1, FUN='sum')))
#plotdata$sqrttotal <- plotdata$Total^0.5
prematrix <- plotdata#subset(plotdata, Observation_ID %in% plots)
Com.Sp.agg <- aggregate(log10(1-(prematrix[,c('Field', 'Shrub', 'Subcanopy', 'Tree')]/100.001)), by=list(soilplot = prematrix$soilplot),  FUN='sum')
Com.Sp.agg[,c('Field', 'Shrub', 'Subcanopy', 'Tree')] <- 100*(1-10^(Com.Sp.agg[,c('Field', 'Shrub', 'Subcanopy', 'Tree')]))
Com.Sp.agg$over <- 100*(1-10^(apply(log10(1-(Com.Sp.agg[,c('Subcanopy', 'Tree')]/100.001)), MARGIN = 1, FUN='sum')))
Com.Sp.agg$under <- 100*(1-10^(apply(log10(1-(Com.Sp.agg[,c('Field', 'Shrub')]/100.001)), MARGIN = 1, FUN='sum')))
Com.Sp.agg$invover <- 100- Com.Sp.agg$over
rownames(Com.Sp.agg) <- Com.Sp.agg$soilplot
Com.Sp.agg <- Com.Sp.agg[,-1]
plotdata$logtotal <- (log10(100*(1-10^(apply(log10(1-(plotdata[,c('Field', 'Shrub', 'Subcanopy', 'Tree')]/100.001)), MARGIN = 1, FUN='sum'))))+2)
plotmatrix <- makecommunitydataset(plotdata, row = 'soilplot', column = 'Species', value = 'logtotal', drop = TRUE)
d <- vegdist(plotmatrix, method='bray', binary=FALSE, na.rm=T)
t <- flexbeta(d, beta =  -0.25)
k=8
groups <- cutree(t, k = k)
soilplot <- names(groups)
clust <- unname(groups)
groupdf <- as.data.frame(cbind(soilplot, clust))
plotgroup <- merge(groupdf, plotdata, by='soilplot')
plotgroupsum <- aggregate(plotgroup$Total, by=list(clust = plotgroup$clust, Species = plotgroup$Species), FUN='sum')
names(plotgroupsum)[names(plotgroupsum)=='x'] <-'sum'
plotgroupmax <- aggregate(plotgroupsum$sum, by=list(clust = plotgroupsum$clust), FUN='max')
names(plotgroupmax)[names(plotgroupmax)=='x'] <-'max'
plotgroupsum <- merge(plotgroupsum, plotgroupmax, by='clust')
plotgroupsum$Imp <- plotgroupsum$sum/plotgroupsum$max
rm(plotgroupmax, plotgroup)
cluster <- '8'
states <- c('MI','IN','OH')
core <- c('MI')
ecoregion <- c('222')
level <- 'Association'
level <- unique(unit[unit$hierarchylevel %in% level,'element_global_id'])
unit$woodland <- 0
unit[substring(unit$unitsort,1,1) %in% '1',]$woodland <- 1
states <- unique(vegstates[vegstates$subnation_code %in% states,'element_global_id'])
core <- unique(vegstates[vegstates$subnation_code %in% core,'element_global_id'])
ecoregion <- unique(vegecoregion[vegecoregion$usfs_ecoregion_2007_concat_cd %in% ecoregion,'element_global_id'])
g <- subset(plotgroupsum, clust==cluster)
plotassociations <- as.data.frame(lapply(as.data.frame(cbind(soilplot='x', clust = 'x', 'element_global_id'=0, 'scientificname'='x')), as.character), stringsAsFactors=FALSE)
for(i in 1:nrow(groupdf)){
g <- subset(plotdata, soilplot==groupdf[i,1])
overstory <- Com.Sp.agg[groupdf[i,1],'over']
overwt <- overstory/(overstory+12.5)*(1+12.5/100)#skews weight to woodlands at 10% cover. Change 12.5 to 50 for a 25% threshold.
g$Imp <- g$Total
g$Imp <- g$Imp^0.5
gtotal <- sum(g$Imp)
vegtotal <- aggregate(USNVClist$x, by=list(element_global_id = USNVClist$element_global_id, scientificname = USNVClist$scientificname), FUN='sum')
names(vegtotal)[names(vegtotal)=='x'] <-'vegtotal'
gmerge <- merge(g, USNVClist, by.x = 'Species', by.y = 'acctaxon')
gmerge$intersect <- (gmerge$Imp*gmerge$x)^0.5
gintersect <- aggregate(gmerge$intersect, by=list(element_global_id = gmerge$element_global_id, scientificname = gmerge$scientificname), FUN='sum')
names(gintersect)[names(gintersect)=='x'] <-'intersect'
g <- merge(gintersect, vegtotal, by=c('element_global_id', 'scientificname'))
g$affinity <- g$intersect/(g$vegtotal*gtotal)^0.5*100
g <- merge(g, unit[,c('element_global_id', 'woodland')], by='element_global_id')
g$wt <- overwt*g$woodland + (1-g$woodland)*(1-overwt)
g$state <- 'no'
if(nrow(g[g$element_global_id %in% states,])>0){
g[g$element_global_id %in% states,]$state <- 'near'}
if(nrow(g[g$element_global_id %in% core,])>0){
g[g$element_global_id %in% core,]$state <- 'yes'}
g$ecoregion <- 'no'
if(nrow(g[g$element_global_id %in% ecoregion,])>0){
g[g$element_global_id %in% ecoregion,]$ecoregion <- 'yes'}
g$level <- 'no'
g[g$element_global_id %in% level,]$level <- 'yes'
g <- subset(g, level == 'yes')
g$best <- g$affinity * g$wt #bias towards matching structure
g[g$ecoregion == 'no',]$best <- g[g$ecoregion == 'no',]$best*0.75
g[g$element_global_id %in% states,]$best <- g[g$element_global_id %in% states,]$best*1/0.75
g[g$element_global_id %in% core,]$best <- g[g$element_global_id %in% core,]$best*1/0.75
g$best <- g$best/max(g$best)*100
g <- g[,!colnames(g)%in% c('intersect','vegtotal')]
rm(gmerge, vegtotal, gintersect)
g <- subset(g, best >= 0 & level == 'yes')# & state == 'yes')
g <- g[order(g$best, decreasing = TRUE),]
plotassociations1 <- as.data.frame(lapply(as.data.frame(cbind(groupdf[i,],g[1,1:2])), as.character), stringsAsFactors=FALSE)
plotassociations <- rbind(plotassociations,plotassociations1)
}
rm(plotassociations1)
plotassociations <- plotassociations[-1,]
plotassociations <- merge(unique(plotdata[,c('soilplot', 'Observation_ID')]), plotassociations, by='soilplot')
write.csv(plotassociations, 'output/allplotassociations.csv', row.names = F)
